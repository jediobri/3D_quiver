import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from matplotlib.animation import FuncAnimation
import read_sensor
import time

fig, ax = plt.subplots(subplot_kw=dict(projection="3d"))

"""
x = read_sensor.X
y = read_sensor.Y
z = read_sensor.Z
"""

def get_arrow(i): # get arrow with theta
    u = 0
    v = 0
    w = 0
    x = read_sensor.X
    y = read_sensor.Y
    z = read_sensor.Z
    
    return u,v,w,x,y,z

quiver = ax.quiver(*get_arrow(0), length=1,normalize=True) # * passes get_arrows as tuple
#print(read_sensor.X,read_sensor.Y,read_sensor.Z) #this is correct

ax.set_xlim(-2, 2)
ax.set_ylim(-2, 2)
ax.set_zlim(-2, 2)

def update(i):
    read_sensor.X
    read_sensor.Y
    read_sensor.Z
    global quiver
    quiver.remove()
    print(read_sensor.X,read_sensor.Y,read_sensor.Z)
    time.sleep(1)
    quiver = ax.quiver(*get_arrow(i), length=1,normalize=True)
    
#animation call
ani = FuncAnimation(fig, update, frames=np.linspace(0,2*np.pi,200), interval=50)
plt.show()
